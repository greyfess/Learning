import telebot
from telebot import types

# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_TOKEN' –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
bot = telebot.TeleBot('5820184297:AAEEpjyCO8N5iJV1L8TWJtCSlo37yZxx_QM')

# –û—Ç–∫–ª—é—á–∞–µ–º –≤–µ–±—Ö—É–∫, –µ—Å–ª–∏ –æ–Ω –∞–∫—Ç–∏–≤–µ–Ω
bot.remove_webhook()

# –í–∞—à chat_id, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è
ADMIN_CHAT_ID = '424796989'

# –°–ª–æ–≤–∞—Ä—å —Å –¥–∂–µ—Ä–∫–∞–º–∏ –∏ –∏—Ö —Ü–µ–Ω–∞–º–∏
jerks = {
    "–∫—É—Ä–∏–Ω—ã–µ —Å –ø–∞–ø—Ä–∏–∫–æ–π": 130,
    "–∫—É—Ä–∏–Ω—ã–µ —Å –±–∞—Å—Ç—É—Ä–º–æ–π": 130,
    "–∫—É—Ä–∏–Ω—ã–µ –∫–∞—Ä—Ä–∏": 130,
    "–∫—É—Ä–∏–Ω—ã–µ —á–∏–ª–∏": 130,
    "–∫—É—Ä–∏–Ω—ã–µ —Å —Ç—Ä–∞–≤–∞–º–∏": 130,
    "–∫—É—Ä–∏–Ω—ã–µ —Å–æ —Å–º–µ—Å—å—é –ø–µ—Ä—Ü–µ–≤": 130,
    "–∫—É—Ä–∏–Ω—ã–µ '–ø–æ–¥ —à–∞—à–ª—ã–∫'": 130,
    "–≥–æ–≤—è–¥–∏–Ω–∞ —Å –ø–∞–ø—Ä–∏–∫–æ–π": 150,
    "–≥–æ–≤—è–¥–∏–Ω–∞ —Å –±–∞—Å—Ç—É—Ä–º–æ–π": 150,
    "–≥–æ–≤—è–¥–∏–Ω–∞ –∫–∞—Ä—Ä–∏": 150,
    "–≥–æ–≤—è–¥–∏–Ω–∞ —á–∏–ª–∏": 150,
    "–≥–æ–≤—è–¥–∏–Ω–∞ —Å —Ç—Ä–∞–≤–∞–º–∏": 150,
    "–≥–æ–≤—è–¥–∏–Ω–∞ —Å–æ —Å–º–µ—Å—å—é –ø–µ—Ä—Ü–µ–≤": 150,
    "–≥–æ–≤—è–¥–∏–Ω–∞ '–ø–æ–¥ —à–∞—à–ª—ã–∫'": 150,
    "—Å–≤–∏–Ω—ã–µ —Å –ø–∞–ø—Ä–∏–∫–æ–π": 150,
    "—Å–≤–∏–Ω—ã–µ —Å –±–∞—Å—Ç—É—Ä–º–æ–π": 150,
    "—Å–≤–∏–Ω—ã–µ –∫–∞—Ä—Ä–∏": 150,
    "—Å–≤–∏–Ω—ã–µ —á–∏–ª–∏": 150,
    "—Ñ–∏—Ä–º–µ–Ω–Ω—ã–µ —Å–≤–∏–Ω—ã–µ": 200,
    "—Å–≤–∏–Ω—ã–µ —Å–æ —Å–º–µ—Å—å—é –ø–µ—Ä—Ü–µ–≤": 150,
    "—Å–≤–∏–Ω—ã–µ '–ø–æ–¥ —à–∞—à–ª—ã–∫'": 150,
    "–∫–∞–±–∞–Ω–æ—Å—ã —Å–≤–∏–Ω—ã–µ": 250
}

# –ó–Ω–∞—á–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–∏–¥–∞
icons = {
    "–∫—É—Ä–∏–Ω—ã–µ": "üêî",
    "–≥–æ–≤—è–¥–∏–Ω–∞": "üêÑ",
    "—Å–≤–∏–Ω—ã–µ": "üêñ",
    "–∫–∞–±–∞–Ω–æ—Å—ã": "üêó"
}

# –ö–æ—Ä–∑–∏–Ω–∞
cart = {}

# –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
USER_STATE = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –¥–∂–µ—Ä–∫–∞–º–∏ –∏ –∫–æ—Ä–∑–∏–Ω–æ–π
def create_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    items = []
    for jerk, price in jerks.items():
        icon = icons.get(get_meat_type(jerk), "")
        item = types.KeyboardButton(f"{icon} {jerk} ({price} –≥—Ä–Ω.)")
        items.append(item)
    markup.add(*items)
    markup.add(types.KeyboardButton("–ö–æ—Ä–∑–∏–Ω–∞"))
    return markup

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –º—è—Å–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
def get_meat_type(jerk_name):
    if "–∫—É—Ä–∏–Ω—ã–µ" in jerk_name:
        return "–∫—É—Ä–∏–Ω—ã–µ"
    elif "–≥–æ–≤—è–¥–∏–Ω–∞" in jerk_name:
        return "–≥–æ–≤—è–¥–∏–Ω–∞"
    elif "—Å–≤–∏–Ω—ã–µ" in jerk_name or "–∫–∞–±–∞–Ω–æ—Å—ã" in jerk_name:
        return "—Å–≤–∏–Ω—ã–µ"
    else:
        return "–∫–∞–±–∞–Ω–æ—Å—ã"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã
def create_cart_editing_menu():
    markup = types.InlineKeyboardMarkup()
    for jerk, quantity in cart.items():
        markup.add(
            types.InlineKeyboardButton(f"‚ûï {jerk}", callback_data=f'inc_{jerk}'),
            types.InlineKeyboardButton(f"‚ûñ {jerk}", callback_data=f'dec_{jerk}'),
            types.InlineKeyboardButton(f"‚ùå {jerk}", callback_data=f'del_{jerk}')
        )
    markup.add(types.InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑", callback_data='confirm_order'))
    return markup

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã
def show_cart(message):
    text = "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:\n"
    total = 0
    for jerk, quantity in cart.items():
        price = jerks[jerk]
        text += f"- {jerk} x {quantity} = {price * quantity} –≥—Ä–Ω.\n"
        total += price * quantity
    text += f"–ò—Ç–æ–≥–æ: {total} –≥—Ä–Ω."
    bot.send_message(message.chat.id, text, reply_markup=create_cart_editing_menu())

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –æ –¥–æ—Å—Ç–∞–≤–∫–µ
def get_delivery_info(message):
    markup = types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏:\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:\n–§–ò–û:\n–ê–¥—Ä–µ—Å –ù–æ–≤–æ–π –ü–æ—á—Ç—ã:\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):", reply_markup=markup)
    USER_STATE[message.chat.id] = 'waiting_for_delivery_info'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞ –∞–¥–º–∏–Ω—É
def send_order_to_admin(order_text, chat_link):
    bot.send_message(ADMIN_CHAT_ID, f"{order_text}\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {chat_link}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–°—Ç–∞—Ä—Ç"
def create_start_button():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    start_button = types.KeyboardButton("–°—Ç–∞—Ä—Ç")
    markup.add(start_button)
    return markup

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥
@bot.message_handler(commands=['start'])
def send_welcome(message):
    # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    cart.clear()
    USER_STATE[message.chat.id] = 'idle'
    bot.reply_to(message, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω –¥–∂–µ—Ä–∫–æ–≤!\n\n–í–æ—Ç —á—Ç–æ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º:\n\nüêî –ö—É—Ä–∏–Ω—ã–µ –¥–∂–µ—Ä–∫–∏:\n- —Å –ø–∞–ø—Ä–∏–∫–æ–π: 130 –≥—Ä–Ω.\n- —Å –±–∞—Å—Ç—É—Ä–º–æ–π: 130 –≥—Ä–Ω.\n- –∫–∞—Ä—Ä–∏: 130 –≥—Ä–Ω.\n- —á–∏–ª–∏: 130 –≥—Ä–Ω.\n- —Å —Ç—Ä–∞–≤–∞–º–∏: 130 –≥—Ä–Ω.\n- —Å–æ —Å–º–µ—Å—å—é –ø–µ—Ä—Ü–µ–≤: 130 –≥—Ä–Ω.\n- '–ø–æ–¥ —à–∞—à–ª—ã–∫': 130 –≥—Ä–Ω.\n\nüêÑ –ì–æ–≤—è–¥–∏–Ω–∞:\n- —Å –ø–∞–ø—Ä–∏–∫–æ–π: 150 –≥—Ä–Ω.\n- —Å –±–∞—Å—Ç—É—Ä–º–æ–π: 150 –≥—Ä–Ω.\n- –∫–∞—Ä—Ä–∏: 150 –≥—Ä–Ω.\n- —á–∏–ª–∏: 150 –≥—Ä–Ω.\n- —Å —Ç—Ä–∞–≤–∞–º–∏: 150 –≥—Ä–Ω.\n- —Å–æ —Å–º–µ—Å—å—é –ø–µ—Ä—Ü–µ–≤: 150 –≥—Ä–Ω.\n- '–ø–æ–¥ —à–∞—à–ª—ã–∫': 150 –≥—Ä–Ω.\n\nüêñ –°–≤–∏–Ω—ã–µ –¥–∂–µ—Ä–∫–∏:\n- —Å –ø–∞–ø—Ä–∏–∫–æ–π: 150 –≥—Ä–Ω.\n- —Å –±–∞—Å—Ç—É—Ä–º–æ–π: 150 –≥—Ä–Ω.\n- –∫–∞—Ä—Ä–∏: 150 –≥—Ä–Ω.\n- —á–∏–ª–∏: 150 –≥—Ä–Ω.\n- —Ñ–∏—Ä–º–µ–Ω–Ω—ã–µ: 200 –≥—Ä–Ω.\n- —Å–æ —Å–º–µ—Å—å—é –ø–µ—Ä—Ü–µ–≤: 150 –≥—Ä–Ω.\n- '–ø–æ–¥ —à–∞—à–ª—ã–∫': 150 –≥—Ä–Ω.\n\nüêó –ö–∞–±–∞–Ω–æ—Å—ã —Å–≤–∏–Ω—ã–µ: 250 –≥—Ä–Ω.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–∂–µ—Ä–∫ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:", reply_markup=create_menu())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    text = message.text

    if text == "–ö–æ—Ä–∑–∏–Ω–∞":
        show_cart(message)
        return

    if text == "–°—Ç–∞—Ä—Ç":
        cart.clear()
        USER_STATE[message.chat.id] = 'idle'
        bot.send_message(message.chat.id, "–í—ã –Ω–∞—á–∞–ª–∏ –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∂–µ—Ä–∫ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:", reply_markup=create_menu())
        return

    if message.chat.id in USER_STATE and USER_STATE[message.chat.id] == 'waiting_for_delivery_info':
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏
        delivery_info = text
        chat_link = f"https://t.me/{message.chat.username}" if message.chat.username else f"https://t.me/c/{message.chat.id}"
        order_text = f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.chat.id}:\n\n–î–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏:\n{delivery_info}\n\n–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:\n"
        for jerk, quantity in cart.items():
            price = jerks[jerk]
            order_text += f"- {jerk} x {quantity} = {price * quantity} –≥—Ä–Ω.\n"
        send_order_to_admin(order_text, chat_link)
        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ! –í–∞—à –∑–∞–∫–∞–∑ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.", reply_markup=create_start_button())
        USER_STATE[message.chat.id] = 'idle'
        return

    try:
        parts = text.split(' (')
        if len(parts) > 1:
            selected_jerk = parts[0].split(' ', 1)[1]  # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–∂–µ—Ä–∫–∞ –±–µ–∑ –∑–Ω–∞—á–∫–∞ –∏ —Ü–µ–Ω—ã
        else:
            selected_jerk = text.split(' ', 1)[1]  # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Ü–µ–Ω—É, –ø—Ä–æ–±—É–µ–º –±–µ–∑ –Ω–µ–µ
    except IndexError:
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≤–∞—à –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∂–µ—Ä–∫ –∏–∑ –º–µ–Ω—é.")
        return

    if selected_jerk in jerks:
        if selected_jerk not in cart:
            cart[selected_jerk] = 1
        else:
            cart[selected_jerk] += 1
        bot.send_message(message.chat.id, f"–î–∂–µ—Ä–∫ '{selected_jerk}' –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É.", reply_markup=create_menu())
    else:
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≤–∞—à –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∂–µ—Ä–∫ –∏–∑ –º–µ–Ω—é.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã
@bot.callback_query_handler(lambda call: call.data.startswith(('inc_', 'dec_', 'del_', 'confirm_order')))
def callback_edit_cart(call):
    if call.data.startswith('inc_'):
        jerk = call.data[4:]
        if jerk in cart:
            cart[jerk] += 1
    elif call.data.startswith('dec_'):
        jerk = call.data[4:]
        if cart[jerk] > 1:
            cart[jerk] -= 1
        else:
            del cart[jerk]
    elif call.data.startswith('del_'):
        jerk = call.data[4:]
        if jerk in cart:
            del cart[jerk]
    elif call.data == 'confirm_order':
        bot.send_message(call.message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏:", reply_markup=types.ReplyKeyboardRemove())
        USER_STATE[call.message.chat.id] = 'waiting_for_delivery_info'
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
    cart_text = "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:\n"
    total = 0
    for jerk, quantity in cart.items():
        price = jerks[jerk]
        cart_text += f"- {jerk} x {quantity} = {price * quantity} –≥—Ä–Ω.\n"
        total += price * quantity
    cart_text += f"–ò—Ç–æ–≥–æ: {total} –≥—Ä–Ω."

    if call.message.text != cart_text or call.message.reply_markup != create_cart_editing_menu():
        bot.edit_message_text(cart_text, call.message.chat.id, call.message.message_id, reply_markup=create_cart_editing_menu())

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
